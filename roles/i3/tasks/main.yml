---
- name: Install i3 window manager
  become: true
  ansible.builtin.package:
    name:
      - i3-wm
    state: "{{ pkg_state }}"
  tags:
    - i3

- name: Install i3lock-color
  kewlfft.aur.aur:
    name: i3lock-color
    use: yay
    state: "{{ pkg_state }}"
  tags:
    - i3-lock
    - i3

- name: Copy i3 dotfiles
  become: false
  ansible.builtin.git:
    repo: git@github.com:MikePapaSierra/i3.git
    dest: "{{ ansible_user_dir }}/.config/i3"
    single_branch: yes
    version: main
    update: no
  tags:
    - i3

- name: Install picom
  become: true
  ansible.builtin.package:
    name:
      - picom
    state: "{{ pkg_state }}"
  tags:
    - picom
    - i3
    - system

- name: Install arandr
  become: true
  ansible.builtin.package:
    name:
      - arandr
    state: "{{ pkg_state }}"
  tags:
    - picom
    - i3
    - system

- name: Install polybar
  become: true
  ansible.builtin.package:
    name: polybar
    state: "{{ pkg_state }}"
  tags:
    - polybar
    - i3

- name: Create config directory for polybar
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.config/polybar"
    state: directory
    owner: "{{ username }}"
    group: "{{ username  }}"
    mode: '0755'
  tags:
    - polybar
    - i3

- name: Get wireless interface
  set_fact:
    wireless_iface: '{{ item }}'
  loop: '{{ ansible_facts.interfaces }}'
  when: 'item.startswith(wl)'

- name: Get wired interface
  set_fact:
    wired_iface: '{{ item }}'
  loop: '{{ ansible_facts.interfaces }}'
  when: 'item.startswith(enp)'

- name: Create polybar configuration
  ansible.builtin.template:
    dest: "{{ ansible_user_dir }}/.config/polybar/config.ini"
    src: "polybar.ini.j2"
  tags:
    - polybar
    - i3

- name: Copy polybar scripts
  ansible.builtin.copy:
    dest: "{{ ansible_user_dir }}/.config/polybar/"
    src: "{{ item }}"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: '0755'
  with_fileglob:
    - "{{ role_path }}/templates/launch.sh" 
    - "{{ role_path }}/templates/calendar.sh" 
    - "{{ role_path }}/templates/pulseaudio-control.sh" 
    - "{{ role_path }}/templates/rofi-usb-mount.sh" 
    - "{{ role_path }}/templates/weather-plugin.sh" 
    - "{{ role_path }}/templates/mocha.ini" 
  tags:
    - polybar-calendar
    - polybar
    - i3

- name: Install polybar-now-playing
  kewlfft.aur.aur:
    name: polybar-now-playing-git
    use: yay
    state: "{{ pkg_state }}"
  tags:
    - polybar-now-playing
    - polybar
    - i3

- name: Install PulseAudio Volume Control
  become: true
  ansible.builtin.package:
    name: pavucontrol
    state: "{{ pkg_state }}"
  tags:
    - pavucontrol
    - polybar
    - i3

- name: Install pulseaudio-control
  kewlfft.aur.aur:
    name: pulseaudio-control
    use: yay
    state: "{{ pkg_state }}"
  tags:
    - pulseaudio-control
    - polybar
    - i3

- name: Install Dunst
  become: true
  ansible.builtin.package:
    name: dunst
    state: "{{ pkg_state }}"
  tags:
    - dunst
    - polybar
    - i3 

- name: Create Dunst config directory
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.config/dunst"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: '0755'

- name: Create Dunst configuration
  ansible.builtin.template:
    dest: "{{ ansible_user_dir }}/.config/dunst/dunstrc"
    src: "dunstrc.j2"
  tags:
    - dunst
    - i3

- name: Install Dmenu
  become: true
  ansible.builtin.package:
    name: dmenu
    state: "{{ pkg_state }}"
  tags:
    - dmenu
    - polybar
    - i3

- name: Install Rofi
  ansible.builtin.import_tasks: rofi.yml

- name: Install Nitrogen
  ansible.builtin.import_tasks: nitrogen.yml
